<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="diary.mybatis">
	
	<!-- 일기 쓰기 -->
	<insert id="insertDiary" parameterType="Diary">
		insert into story_diary (num, user_email, user_name, d_diary, d_date, subject, content, filename1, filesize1, filename2,
		 filesize2, filename3, filesize3, filename4, filesize4, filename5, filesize5, filename6, filesize6) values (#{num},#{user_email},#{user_name},
		 #{d_diary},#{d_date},#{subject},#{content},#{filename1},#{filesize1},#{filename2},#{filesize2},#{filename3},#{filesize3},
		 #{filename4},#{filesize4},#{filename5},#{filesize5},#{filename6},#{filesize6})
	</insert>
	
	<!-- 일기 쓸 때, 순번 계산 (시퀸스) -->
	<select id="getNextNumber" resultType="int">
		select story_diaryser.nextval from dual
	</select>
	
	<!-- 일기 수 (이메일) -->
	<select id="getDiaryCount1" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM story_diary WHERE user_email = #{user_email}
	</select>
	
	<!-- 일기 수 (이메일 & 일기장) -->
	<select id="getDiaryCount2" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM story_diary WHERE user_email = #{user_email} and d_diary = #{d_diary}
	</select>
	
	<!-- 일기 사진 수 (이메일) -->
	<select id="getGalleryCount" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM story_diary WHERE user_email = #{user_email} and 
		(filename1 is not null or filename2 is not null or filename3 is not null or filename4 is not null or filename5 is not null or filename6 is not null)
	</select>
	
	<!-- 일기 목록 가져오기 (이메일) -->
	<select id="getDiaries1" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, d_diary, d_date, subject, content, user_email from story_diary
		 where user_email = #{user_email} order by num desc) b) where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 일기 목록 가져오기 (이메일 & 일기장) -->
	<select id="getDiaries2" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, d_diary, d_date, subject, content, user_email from story_diary
		 where user_email = #{user_email} and d_diary = #{d_diary} order by num desc) b) 
		 where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 일기 사진 가져오기 (이메일) -->
	<select id="getGallery" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, user_email, subject, d_date, filename1, filename2, filename3, filename4, filename5, filename6 from story_diary
		 where user_email = #{user_email} and 
		 (filename1 is not null or filename2 is not null or filename3 is not null or filename4 is not null or filename5 is not null or filename6 is not null) 
		 order by d_date desc) b) where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 일기 날짜 가져오기 (이메일 기준) (갤러리 날짜 검색 전용) -->
	<select id="getGalleryDate" resultType="Diary" parameterType="hashmap">
		Select distinct d_date from story_diary where user_email = #{user_email} and (filename1 is not null or filename2 is not null or filename3 is not null 
		or filename4 is not null or filename5 is not null or filename6 is not null) order by d_date desc
	</select>


	<!-- 일기장 목록 가져오기 (이메일 기준) (일기장 가져오기 전용) -->
	<select id="getDiarylist" resultType="Diary" parameterType="hashmap">
		Select distinct d_diary from story_diary where user_email = #{user_email} order by d_diary asc
	</select>
	
	<!-- 일기장 목록 가져오기2 (이메일 기준) (일기장 수정 전용(수정할 일기의 일기장을 제외)) -->
	<select id="getDiarylist2" resultType="Diary" parameterType="hashmap">
		Select distinct d_diary from story_diary where user_email = #{user_email} and d_diary != #{not_in_d_diary} order by d_diary asc
	</select>


	<!-- !!!!!!!!!!!! 검색 관련 !!!!!!!!!!!! -->
	<!-- $$$ 전체 $$$ -->
	
	<!-- ~ Count ~ -->
	<!-- (전체) 일기 수  - 제목 & 내용 -->
	<select id="getSearchDiaryCount_SC" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM story_diary WHERE user_email = #{user_email} and subject like #{search} or content like #{search}
	</select>
	
	<!-- (전체) 일기 수  - 제목 -->
	<select id="getSearchDiaryCount_S" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM story_diary WHERE user_email = #{user_email} and subject like #{search}
	</select>
	
	<!-- (전체) 일기 수  - 내용 -->
	<select id="getSearchDiaryCount_C" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM story_diary WHERE user_email = #{user_email} and content like #{search}
	</select>
	
	<!-- ~ 목록 가져오기 [전체] ~ -->
	<!-- (전체) 일기 목록 가져오기  - 제목 & 내용 -->
	<select id="searchDiary_SC" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, d_diary, d_date, subject, content, user_email from story_diary
		 where user_email = #{user_email} and subject like #{search} or content like #{search} order by num desc) b) 
		 where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- (전체) 일기 목록 가져오기  - 제목 -->
	<select id="searchDiary_S" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, d_diary, d_date, subject, content, user_email from story_diary
		 where user_email = #{user_email} and subject like #{search} order by num desc) b) 
		 where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- (전체) 일기 목록 가져오기  - 내용 -->
	<select id="searchDiary_C" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, d_diary, d_date, subject, content, user_email from story_diary
		 where user_email = #{user_email} and content like #{search} order by num desc) b) 
		 where rnum between #{startRow} and #{endRow}
	</select>

	<!-- end. $$$ 전체 $$$ -->
	
	<!-- $$$ 일기장 개별 $$$ -->
	
	<!-- ~ Count2 ~ -->
	<!-- (개별) 일기 수  - 제목 & 내용 -->
	<select id="getSearchDiaryCount_D_SC" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM story_diary WHERE user_email = #{user_email} and d_diary = #{d_diary} and (subject like #{search} or content like #{search})
	</select>
	
	<!-- (개별) 일기 수  - 제목 -->
	<select id="getSearchDiaryCount_D_S" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM story_diary WHERE user_email = #{user_email} and d_diary = #{d_diary} and subject like #{search}
	</select>
	
	<!-- (개별) 일기 수  - 내용 -->
	<select id="getSearchDiaryCount_D_C" resultType="int" parameterType="hashmap">
		SELECT nvl(count(*),0) FROM story_diary WHERE user_email = #{user_email} and d_diary = #{d_diary} and content like #{search}
	</select>
	
	<!-- ~ 목록 가져오기 [개별] ~ -->
	<!-- (개별) 일기 목록 가져오기  - 제목 & 내용 -->
	<select id="searchDiary_D_SC" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, d_diary, d_date, subject, content, user_email from story_diary
		 where user_email = #{user_email} and d_diary = #{d_diary} and (subject like #{search} or content like #{search}) order by num desc) b) 
		 where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- (개별) 일기 목록 가져오기  - 제목 -->
	<select id="searchDiary_D_S" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, d_diary, d_date, subject, content, user_email from story_diary
		 where user_email = #{user_email} and d_diary = #{d_diary} and subject like #{search} order by num desc) b) 
		 where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- (개별) 일기 목록 가져오기  - 내용 -->
	<select id="searchDiary_D_C" resultType="Diary" parameterType="hashmap">
		select * from (select rownum rnum, b.* from (select num, d_diary, d_date, subject, content, user_email from story_diary
		 where user_email = #{user_email} and d_diary = #{d_diary} and content like #{search} order by num desc) b) 
		 where rnum between #{startRow} and #{endRow}
	</select>

	<!-- end. $$$ 일기장 개별 $$$ -->
	<!-- end. !!!!!!!!!!!! 검색 관련 !!!!!!!!!!!! -->
	
	<select id="getDiary" parameterType="hashmap" resultType="Diary">
		select * from story_diary where num = #{num} and user_email = #{user_email}
	</select>
	
	<delete id="deleteDiary" parameterType="hashmap">
		delete from story_diary where num = #{num} and user_email = #{user_email}
	</delete>
	
	<update id="updateDiary" parameterType="Diary">
		update story_diary set d_diary = #{d_diary}, d_date = #{d_date}, subject = #{subject}, content = #{content},
		filename1 = #{filename1}, filename2 = #{filename2}, filename3 = #{filename3}, 
		filename4 = #{filename4}, filename5 = #{filename5}, filename6 = #{filename6} where num = #{num} and user_email = #{user_email}
	</update>
	
	<!-- ######################################################################################### -->
	
	
	
	
	
	<select id="getImgDiaryCountTotal" resultType="int" parameterType="hashmap">
		SELECT nvl(count(filename0),0) + nvl(count(filename1),0) + nvl(count(filename2),0) + nvl(count(filename3),0) + nvl(count(filename4),0)
			FROM diary WHERE diaryid = #{diaryid} and email=#{email}
	</select>
	
	
	
	
	
	
	
	
	
		

</mapper>